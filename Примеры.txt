Примеры на языке Тест-Скрипт


-------------------------------------------
test #uspn40										Тест "УСПН-40. Исключение документов"

step 1:											Шаг 1:
execute #uspn79										Выполняем тест "УСПН-79. Загрузка документа"		
step 2:											Шаг 2:
click #upload_btn									Нажимаем на элемент "Кнопка "Загрузить""
select #iskl_upload_year option "год 2015"							Выбираем в выпадающем списке "Выбор года при загрузке файла в исключении" значение "год 2015"
fill #iskl_file_name with @filePath								Заполняем поле "Путь к файлу при загрузке в исключении" значением @filePath
click #iskl_upload_submit								Нажимаем на элемент "Кнопка "Подтвердить" при загрузке в исключении"
wait #message["Процесс поставлен в очередь"] -> is displayed
	for @timeout_notify sec
else error                    	                                                        Ожидаем появление элемента "Всплывающее сообщение" с текстом "Процесс поставлен в очередь" в течение @timeout_notify секунд
step 3:											Шаг 3:
execute #uspn114 with :									Выполняем тест "УСПН-114. Просмотр задачи в очереди" с параметрами:
	task114 : "Исключение документов"						task114 - "Исключение документов"
step 4:											Шаг 4:
click #perekhodnaya_kampaniya								Нажимаем на элемент "Переходная кампания"
click #zayava_ob_investirovanii								Нажимаем на элемент "Заявления об инвестировании"
click #exclusion									Нажимаем на элемент "Исключение документов"
wait #iskl_table -> is displayed for @timeout sec else error
_expectedStatus : "Документы исключены"
assert #iskl_table[1]["Статус"] contains _expectedStatus
	described as format("Ожидаемый статус - {}.", _expectedStatus)
step 5:											Шаг 5:
_db : create $uspndb
_result : _db -> query("select * from uspn.jrn_opr_md where blabla", params)
assert _result -> row count > 0									Проверяем, что результат выполнения метода getRowCount() больше 0
assert _result -> any row -> key "CLS_CHECK_ID" == 15
-------------------------------------------
test #uspn114 with :
	task : ""
	timeout : @max_timeout
	mustExist : true
	successMessage : ""

step 1:

execute #uspn1

step 2:

click #admin
click #queue

step 3:

assert _mustExist114 and #process[contains _task114] -> is displayed
if (_mustExist114)
	wait #message[_successMessage114] -> is displayed during _timeout114 seconds
-------------------------------------------
test #uspn1

step 1:
go $link
step 2:

steps -> login

-------------------------------------------
test #uspn79 with :									Тест "УСПН-79. Загрузка заявления на исключение" с параметрами:
	incorrectSurname : false								incorrectSurname : false
	incorrectSnils : false									incorrectSnils : false
	outerSnils : ""										outerSnils : ""

step 1:											Шаг 1:
_db : create $uspndb
if (_outerSnils -> length > 0) :								Если длина строки outerSnils больше 0, то
	_query : "select * from uspn.init_doc_inv where insnmb = ?;"				присваиваем переменной query значение "select * from uspn.init_doc_inv where insnmb = ?;",
	_result : _db -> query(_query, _outerSnils)
else											иначе
	_result : _db -> query "select * from uspn.init_doc_inv where blablabla"
assert _result -> row count > 0								Проверяем, что результат выполнения метода getRowCount() больше 0
_insnmb : _result -> get "INSNMB" as int
_chsClcDate : _result -> get "CHSCLC_DAT" as date -> to local date
_surname : _result -> get "SURNAME" as string
step 2:											Шаг 2:
execute #uspn1										Выполняем тест "УСПН-1. Вход в систему"
step 3:											Шаг 3:
click #perekhodnaya_kampaniya								Нажимаем на элемент "Переходная кампания"
click #zayava_ob_investirovanii								Нажимаем на элемент "Заявления об инвестировании"
click #exclusion									Нажимаем на элемент "Исключение документов"
step 4:											Шаг 4:
steps -> click filter
while table #iskl_table row count == 0
	_documentNumber : $randNumeric 5							запоминаем случайное число из 5 символов в переменную documentNumber
	fill #doc_number_input with _documentNumber							заполняем поле "Ввод номера документа в фильтре" значением documentNumber
	click #filter_search									нажимаем на элемент "Поиск в фильтре"
click #filter_close									Нажимаем на элемент "Закрыть окно фильтра"
step 5:											Шаг 5:
_xml : create $xml
_xmlName : "PFR-blablabal.xml"								Запоминаем строку "PFR-blablabal.xml" в переменную xmlName
_xml -> load $uspnDataPath + _xmlName						Выполняем метод load() с параметрами (выражение(путь к папке с данными + xmlName))
_xml -> set tag value ($USPNXmlXPath -> INSNMB, steps -> snils after check _incorrectSnils)
_xml -> set tag value ($UspnXmlXPath -> DOCUMENT_NUMBER, _documentNumber)					Выполняем метод setTagVal() с параметрами (UspnXmlXPath.DOCUMENT_NUMBER, documentNumber)
step 6:											Шаг 6:
@filePath : @temp_dir + _xmlName							Запоминаем выражение(@temp_dir + xmlName) в контекстную переменную @filePath
@filePath : _xml -> save

----------------------------------------------------
binding-UspnDBClient

class : USPNDBClient
nickname : uspndb
create : USPNDBClient.newInstance()
query : USPNDBClient.query()

----------------------------------------------------
binding-DBResult

class : DBResult
nickname : dbresult
get : getValue()
	params : String Class<T>
	params : Integer Class<T>
	returns : T
rows : getRowCount()
	returns : int

----------------------------------------------------------

test uspn7

step1:

_snils : execute #uspn62
	with type "ЗНПФД" -> insnmb

step2:

execute #uspn1

step3:

steps -> to invest prinyatie resheniy

step4:

wait #prin_resh_table -> is displayed during 5 sec
_firstRowBefore : table #prin_resh_table [1] as row map
click #make_decision
wait #confirm_window -> is displayed during 5 sec
and continue
if #confirm_window -> is displayed
	click #close_confirm_window
wait #message["Принятие решений поставлено в очередь."] -> is displayed during 5 seconds

step5:

execute #uspn114
	with task "Принятие решений"
	with timeout 216000

step6:

steps -> to invest prinyatie resheniy
_firstRowAfter : table #prin_resh_table [1] as row map
assert _firstRowAfter -> get "Дата начала" not equals _firstRowBefore -> get "Дата начала" described as "Новый процесс не добавлен."
assert _firstRowAfter -> get "Статус" equals "Принято решение"

step7:

_db : create $uspndb
assert _db -> query ("select from errors where snils = ?", _snils) -> row count == 0

step8:

_resultInfo : _db -> query ("select from results where snils = ?", _snils) -> next
assert _resultInfo contains entry ("CLS_STS_ID", 1)


     
